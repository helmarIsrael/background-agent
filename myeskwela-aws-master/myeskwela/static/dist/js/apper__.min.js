/**
 * jQuery SHA1 hash algorithm function
 *
 *      <code>
 *              Calculate the sha1 hash of a String
 *              String $.sha1 ( String str )
 *      </code>
 *
 * Calculates the sha1 hash of str using the US Secure Hash Algorithm 1.
 * SHA-1 the Secure Hash Algorithm (SHA) was developed by NIST and is specified in the Secure Hash Standard (SHS, FIPS 180).
 * This script is used to process variable length message into a fixed-length output using the SHA-1 algorithm. It is fully compatible with UTF-8 encoding.
 * If you plan using UTF-8 encoding in your project don't forget to set the page encoding to UTF-8 (Content-Type meta tag).
 * This function orginally get from the WebToolkit and rewrite for using as the jQuery plugin.
 *
 * Example
 *      Code
 *              <code>
 *                      $.sha1("I'm Persian.");
 *              </code>
 *      Result
 *              <code>
 *                      "1d302f9dc925d62fc859055999d2052e274513ed"
 *              </code>
 *
 * @alias Muhammad Hussein Fattahizadeh < muhammad [AT] semnanweb [DOT] com >
 * @link http://www.semnanweb.com/jquery-plugin/sha1.html
 * @see http://www.webtoolkit.info/
 * @license http://www.gnu.org/licenses/gpl.html [GNU General Public License]
 * @param {jQuery} {sha1:function(string))
 * @return string
 */

(function($){

        var rotateLeft = function(lValue, iShiftBits) {
                return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
        }

        var lsbHex = function(value) {
                var string = "";
                var i;
                var vh;
                var vl;
                for(i = 0;i <= 6;i += 2) {
                        vh = (value>>>(i * 4 + 4))&0x0f;
                        vl = (value>>>(i*4))&0x0f;
                        string += vh.toString(16) + vl.toString(16);
                }
                return string;
        };

        var cvtHex = function(value) {
                var string = "";
                var i;
                var v;
                for(i = 7;i >= 0;i--) {
                        v = (value>>>(i * 4))&0x0f;
                        string += v.toString(16);
                }
                return string;
        };

        var uTF8Encode = function(string) {
                string = string.replace(/\x0d\x0a/g, "\x0a");
                var output = "";
                for (var n = 0; n < string.length; n++) {
                        var c = string.charCodeAt(n);
                        if (c < 128) {
                                output += String.fromCharCode(c);
                        } else if ((c > 127) && (c < 2048)) {
                                output += String.fromCharCode((c >> 6) | 192);
                                output += String.fromCharCode((c & 63) | 128);
                        } else {
                                output += String.fromCharCode((c >> 12) | 224);
                                output += String.fromCharCode(((c >> 6) & 63) | 128);
                                output += String.fromCharCode((c & 63) | 128);
                        }
                }
                return output;
        };

        $.extend({
                sha1: function(string) {
                        var blockstart;
                        var i, j;
                        var W = new Array(80);
                        var H0 = 0x67452301;
                        var H1 = 0xEFCDAB89;
                        var H2 = 0x98BADCFE;
                        var H3 = 0x10325476;
                        var H4 = 0xC3D2E1F0;
                        var A, B, C, D, E;
                        var tempValue;
                        string = uTF8Encode(string);
                        var stringLength = string.length;
                        var wordArray = new Array();
                        for(i = 0;i < stringLength - 3;i += 4) {
                                j = string.charCodeAt(i)<<24 | string.charCodeAt(i + 1)<<16 | string.charCodeAt(i + 2)<<8 | string.charCodeAt(i + 3);
                                wordArray.push(j);
                        }
                        switch(stringLength % 4) {
                                case 0:
                                        i = 0x080000000;
                                break;
                                case 1:
                                        i = string.charCodeAt(stringLength - 1)<<24 | 0x0800000;
                                break;
                                case 2:
                                        i = string.charCodeAt(stringLength - 2)<<24 | string.charCodeAt(stringLength - 1)<<16 | 0x08000;
                                break;
                                case 3:
                                        i = string.charCodeAt(stringLength - 3)<<24 | string.charCodeAt(stringLength - 2)<<16 | string.charCodeAt(stringLength - 1)<<8 | 0x80;
                                break;
                        }
                        wordArray.push(i);
                        while((wordArray.length % 16) != 14 ) wordArray.push(0);
                        wordArray.push(stringLength>>>29);
                        wordArray.push((stringLength<<3)&0x0ffffffff);
                        for(blockstart = 0;blockstart < wordArray.length;blockstart += 16) {
                                for(i = 0;i < 16;i++) W[i] = wordArray[blockstart+i];
                                for(i = 16;i <= 79;i++) W[i] = rotateLeft(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);
                                A = H0;
                                B = H1;
                                C = H2;
                                D = H3;
                                E = H4;
                                for(i = 0;i <= 19;i++) {
                                        tempValue = (rotateLeft(A, 5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;
                                        E = D;
                                        D = C;
                                        C = rotateLeft(B, 30);
                                        B = A;
                                        A = tempValue;
                                }
                                for(i = 20;i <= 39;i++) {
                                        tempValue = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;
                                        E = D;
                                        D = C;
                                        C = rotateLeft(B, 30);
                                        B = A;
                                        A = tempValue;
                                }
                                for(i = 40;i <= 59;i++) {
                                        tempValue = (rotateLeft(A, 5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;
                                        E = D;
                                        D = C;
                                        C = rotateLeft(B, 30);
                                        B = A;
                                        A = tempValue;
                                }
                                for(i = 60;i <= 79;i++) {
                                        tempValue = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;
                                        E = D;
                                        D = C;
                                        C = rotateLeft(B, 30);
                                        B = A;
                                        A = tempValue;
                                }
                                H0 = (H0 + A) & 0x0ffffffff;
                                H1 = (H1 + B) & 0x0ffffffff;
                                H2 = (H2 + C) & 0x0ffffffff;
                                H3 = (H3 + D) & 0x0ffffffff;
                                H4 = (H4 + E) & 0x0ffffffff;
                        }
                        var tempValue = cvtHex(H0) + cvtHex(H1) + cvtHex(H2) + cvtHex(H3) + cvtHex(H4);
                        return tempValue.toLowerCase();
                }
        });
})(jQuery);








(function (apputils, $, undefined)
{
	apputils.product = {btnicolor:"glyphicon glyphicon-tint bg-purple",
						theader:"Product"};

	apputils.client = {btnicolor:"glyphicon glyphicon-user bg-blue",
						theader:"Customer"};

	apputils.driver = {btnicolor:"fa fa-male bg-red",
						theader:"Driver"};

	apputils.truck = {btnicolor:"fa fa-truck bg-green",
						theader:"Truck"};

	apputils.trip = {btnicolor:"glyphicon glyphicon-road bg-yellow",
						theader:"Delivery"};

	apputils.appname = "<b>my.</b>eskwela";

	function remtail(str, chr, padding)
	{
	    chr= typeof chr !== 'undefined' ? chr : " ";
		padding = typeof padding !== 'undefined' ? padding : " ";
		f = str.split(chr);
		res = "";
		for (i=0; i < f.length - 1; i++)
		{
			res += f[i] + padding;
		}

		return res;
	}
	
	function fixtail(str, chr)
	{
	    chr= typeof chr !== 'undefined' ? chr : " ";
		f = str.split(chr);
		res = f[0];
		for (i=1; i < f.length - 1; i++)
		{
			res += chr + f[i];
		}

		return res;
	}

	apputils.geticon = function (iconcolor)
	{
		return remtail(iconcolor);
	}

    apputils.mnutime = {ico:"fa fa-clock-o", label:"Timeline", id:"mnuTimeline"};
	apputils.mnutruck = {
							 ico:apputils.geticon(apputils.truck.btnicolor),
							 label:apputils.truck.theader,
							 id:"mnu"+apputils.truck.theader
						};
	apputils.mnudriver = {
							ico:apputils.geticon(apputils.driver.btnicolor),
							label:apputils.driver.theader,
							id: "mnu" + apputils.driver.theader
						 };
	apputils.mnuclient = {
							ico:apputils.geticon(apputils.client.btnicolor),
							label:apputils.client.theader,
							id: "mnu" + apputils.client.theader
						 };
    apputils.mnutrip = {
							ico:apputils.geticon(apputils.trip.btnicolor),
							label:apputils.trip.theader,
							id: "mnu" + apputils.trip.theader
	                    };

	apputils.mnuproduct = {
							ico:apputils.geticon(apputils.product.btnicolor),
							label:apputils.product.theader,
							id: "mnu" + apputils.product.theader
						};

    apputils.mnureport = {
							ico:"fa fa-signal",
							label:"Report",
							id: "mnuReport"
						};

	function isCookie(cname)
    {
	    return $.cookie(cname) != undefined && $.cookie(cname).length > 0;
	}


	apputils.islogin = function ()
	{
		return isCookie("user") && isCookie("a") && isCookie("b") && isCookie("c");
	}

	apputils.login = function ()
	{
        username = $("#username").val();
		password = $("#password").val();
		model.verify(username,password);
	}

	apputils.rest = "http://127.0.0.1:5000";


	apputils.dashset = function (data)
	{
		$("#main").html("");
		view.sidemenu(data.usertype);
		view.fillinfo(data.userdetails);
		view.compose(data, init);
		view.setprofimg(data.imgsrc);
	}

	apputils.company = {};

	apputils.customer = {};

	apputils.hauler = {};

	apputils.truck_assignment = {};
	
	
	apputils.getAge = function (dateString) {
		//code originally from http://stackoverflow.com/a/10119380
		
		        var yearnow = new Date();
		        
		        if (yearnow.getMonth() <= 6)
		        {
				     var now = new Date(yearnow.getFullYear(), 6, 1);
				}
				else
				{
				    var now = yearnow;
				}
				
				var yearNow = now.getYear();
				var monthNow = now.getMonth();
				var dateNow = now.getDate();
				
				var dob = new Date(dateString.substring(6,10),
									dateString.substring(0,2)-1,                   
									dateString.substring(3,5)                  
									);
				
				var yearDob = dob.getYear();
				var monthDob = dob.getMonth();
				var dateDob = dob.getDate();
				
				var yearAge = yearNow - yearDob;
				
				if (monthNow >= monthDob)
					var monthAge = monthNow - monthDob;
				else {
					yearAge--;
					var monthAge = 12 + monthNow -monthDob;
				}
				
				if (dateNow >= dateDob)
					var dateAge = dateNow - dateDob;
				else {
					monthAge--;
					var dateAge = 31 + dateNow - dateDob;
				
					if (monthAge < 0) {
					monthAge = 11;
					yearAge--;
					}
				}
						
				return yearAge;
				}

    apputils.initboxfields = function (id)
	{
		columns = $($($("#"+id).children()[1]).children()[0]).children();
		
		for (i=0; i < columns.length; i++)
		{
			colfields = $(columns[i]).children();
			for (j = 0; j < colfields.length; j++)
			{
				$($(colfields[j]).children()[1]).val("");
			}
		}
	}
	
	apputils.composeboxfields = function (id)
	{
		columns = $($($("#"+id).children()[1]).children()[0]).children();
		c = '';
		for (i=0; i < columns.length; i++)
		{
			colfields = $(columns[i]).children();
			for (j = 0; j < colfields.length; j++)
			{
				c += $($(colfields[j]).children()[1]).val() + "*";
			}
		}
		return fixtail(c, "*");
	}


} ( window.apputils = window.apputils || {}, jQuery ));

(function (model, $, undefined)
{
     model.loaditems = function (init)
	 {
             data = {
				       usertype:"admin",
				       userdetails: {name:"Juan Dela Cruz", position: "Manager"},
				       imgsrc: "dist/img/user2-160x160.jpg",
				       date:"17 September 2015",
				       items: [
						     {type:"client",timestamp:"11:34", description:"no?"},
						     {type:"product",timestamp:"11:35", description:"yes?"},
						     {type:"driver",timestamp:"11:36", description:"drive na"}
					   ],
			 		   sys: "Error Login"
			 		}; //data model

	        apputils.dashset(data);
	}

	model.loadtimeline = function ()
	{
		     data = {
				       usertype:"admin",
				       userdetails: {name:"Juan Dela Cruz", position: "Manager"},
				       imgsrc: "dist/img/user2-160x160.jpg",
				       date:"17 September 2015",
				       items: [
						     {type:"client",timestamp:"11:34", description:"no?"},
						     {type:"product",timestamp:"11:35", description:"yes?"},
						     {type:"driver",timestamp:"11:36", description:"drive na"}
					   ],
			 		   sys: "Error Login"
			 		}; //data model
			 $("#nexttimes").unbind("click");
		     $("#user-timeline li:last").remove();
		 	 view.compose(data, false);

	}

	model.sysout = function ()
	{
		$.ajax({
    		url: apputils.rest + '/exit',
    		type:"GET",
    		dataType: "json",
    		success: function(resp) {

				if (resp.status  == 'ok') {
					$.cookie("usertype", null);
					$.cookie("token", null);
					$.cookie("username", null);
					$.cookie("key", null);
					$.cookie("tracker", null);
				} else
				{
					//$("#errlog").html(view.alertbox("danger", resp.message));
				}
    		},
    		error: function (e) {
        		//$("#errlog").html(view.alertbox("danger", "Something Went Wrong!"));
   			},
   			beforeSend: function (xhrObj){
          		xhrObj.setRequestHeader("Authorization",
                        "Basic " + btoa($.cookie("username") + ":" + $.cookie("key")));
   			}
		}); // ajax
	}


    model.verify = function (username, password)
	{

        $.ajax({
    		url: apputils.rest + '/auth',
    		type:"GET",
    		dataType: "json",
    		success: function(resp) {

				if (resp.status  == 'ok') {
					$.cookie("usertype", resp.usertype);
					$.cookie("token", resp.token);
					$.cookie("username", username);
					$.cookie("key", $.sha1(password));
					$.cookie("tracker", "home");
					apputils.dashset(resp);
                    //btn btn-primary btn-large btn-block btn-flat
					//$("#btnlogin").removeClass("fa fa-refresh fa-spin");
					$("#logineffects").html("");

				} else
				{
					$("#errlog").html(view.alertbox("danger", resp.message));
					//$("#btnlogin").removeClass("fa fa-refresh fa-spin");
					$("#logineffects").html("");
				}
    		},
    		error: function (e) {
        		$("#errlog").html(view.alertbox("danger", "Something Went Wrong!"));
				//$("#btnlogin").removeClass("fa fa-refresh fa-spin");
				$("#logineffects").html("");
   			},
   			beforeSend: function (xhrObj){
				//$("#btnlogin").addClass("fa fa-refresh fa-spin");
				$("#logineffects").html(view.spinner());
          		xhrObj.setRequestHeader("Authorization",
                        "Basic " + btoa(username + ":" + $.sha1(password)));
   			}
		}); // ajax

	}

	function deliveryinputsane(o,attr, ext)
	{
				for (key in o)
					{
						//console.log("#"+o[key]+ext);
						if (o[key] == 'Empty')
						{
								$("#"+key+ext).addClass(attr);
						}
						else
						{
							$("#"+key+ext).removeClass(attr);
						}
					}
	}

	model.saveinvoice = function () {

	  	//$("#invoiceno").val();
		others = $("#plateonselect").find("option:selected").val() +"*" +
		$("#odometer").val()+"*" +
		$("#orderno").val()+"*" +
	    $("#orderdate").val()+"*" +
		$("#prno").val()+"*" +
		$("#prdate").val()+"*" +
		$("#otherrefno").val()+"*" +
		$("#otherrefdate").val()+"*" +
		$("#customeronselect").find("option:selected").val()+"*" +
		$("#haulername").val()+"*" +
		$("#soldtono").find("option:selected").val()+"*" +
		$("#shiptono").find("option:selected").val()+"*" +
		$("#totaldistance").val()+"*" +
		$("#termsofdel").val()+"*" +
		$("#paymentins").val()+"*" +
		$("#specialins").val()+"*" +
		$("#actualdatedelivered").val()+"*" +
		$("#afterodometer").val();



		      $.ajax({
    		url: apputils.rest + '/invoice/' + $("#invoiceno").val() +
				  "*" + others,
    		type:"POST",
    		dataType: "json",
    		success: function(resp) {

				if (resp.status  == 'ok') {

					$("#jxsaveinvoice").html(view.check());
					deliveryinputsane(resp.item, '', 'group');
				} else
				{
					$("#jxsaveinvoice").html(view.alertbox("danger", resp.message));
					//$("#btnlogin").removeClass("fa fa-refresh fa-spin");
					//$("#logineffects").html("");
					//console.log(resp);
					deliveryinputsane(resp.item, 'has-error', 'group');

				}
    		},
    		error: function (e) {
        		$("#jxsaveinvoice").html(view.alertbox("danger", "Something Went Wrong!"));
				//$("#btnlogin").removeClass("fa fa-refresh fa-spin");
				//$("#logineffects").html("");
   			},
   			beforeSend: function (xhrObj){
				//$("#btnlogin").addClass("fa fa-refresh fa-spin");
				$("#jxsaveinvoice").html(view.spinner());
          		xhrObj.setRequestHeader("Authorization",
                           "Basic " + btoa($.cookie("username") + ":" + $.cookie("key")));
   			}
		}); // ajax

	}


	model.saveinvdetails = function ()
	{
		console.log("saveinvoicedetails");
	}

   model.enrollstu = function ()
	              {
	                   $.ajax({
						   url: apputils.rest + '/student/'+
							     apputils.composeboxfields("enrollbox") + "/" +
								 $.cookie("schoolid"),
							type:"POST",
							dataType: "json",
							success: function(resp) {
									console.log(resp);
							},
							error: function (e) {
								alert("error pre");
						},
						beforeSend: function (xhrObj){
								xhrObj.setRequestHeader("Authorization",
									 "Basic " + btoa($.cookie("username") + ":" + $.cookie("key")));
   										}
							});
	              }

} ( window.model = window.model || {}, jQuery ));




(function(view, $, undefined ) {

    view.timelineitem = function (titem, tstamp, tbody, tfooter)
    {
        return  "<li>" +
                    '<i class="'+ titem.btnicolor + '"></i>' +
                      '<div class="timeline-item">' +
                      '<span class="time"><i class="fa fa-clock-o"></i>'+tstamp+'</span>' +
                        '<h3 class="timeline-header"><a href="#">' + titem.theader + '</a> ...</h3>' +
                          '<div class="timeline-body"> ' + tbody + '</div>' +
                            '<div class="timeline-footer">' +
                              '<a class="btn btn-primary btn-xs">'+ tfooter + '</a>' +
                              '</div>' +
                        '</div>' +
                  '</li>';
    }

	view.timenext = function ()
	{
		return '<li>' +
			     '<i class="fa fa-sort-amount-asc bg-blue" id="nexttimes"></i>' +
			           '<div class="timeline-item">' +
			     '</div>' +
			    '</li>';
	}

	view.labeldate = function (d8)
	{
		      return  '<li class="time-label">' +
				           '<span class="bg-red">' +
									  d8 +
				            '</span>'+
				      '</li>';
	}

    view.timeline = function (tdatecurrent, init)
    {
           var timeline = '<ul  id="user-timeline" class="timeline">' +
			                   view.labeldate(tdatecurrent) +
                               '</ul>';
		if (init)
		{
			$("#main").append(timeline);
		}
		else
		{
			$("#user-timeline").append(timeline);
		}
   }

	view.compose = function (data, init)
	{
		view.timeline(data.date, init);

		/*for (i=0; i < data.items.length; i++)
		{
			switch (data.items[i].type)
			{
				case "product":
				   decor = apputils.product;
				   break;
				case "client":
					decor = apputils.client;
					break;
				case "driver":
					decor = apputils.driver;
					break;
				case "truck":
                    decor = apputils.truck;
					break;
				case "trip":
					decor = apputils.trip;
					break;
			}

			$("#user-timeline").append(view.timelineitem(
										decor,
										data.items[i].timestamp,
										data.items[i].description,
										'..'
									));
		}*/

		$("#user-timeline").append(view.timenext());
		$("#nexttimes").click(model.loadtimeline);
	}

	function addmenuitem(mnudata)
	{
		$("#user-menus").append('<li id="umnu'+ mnudata.id +
				'"><a href="#"><i class="'+ mnudata.ico +
			    '"></i> <span>'+ mnudata.label +'</span></a></li>');
	}

    view.sidemenu = function (persontype)
	{
		$("#user-menus").html("");
		$("#user-menus").append('<li class="header">Options</li>');
		switch(persontype)
		{
			case "su":
				addmenuitem(apputils.mnutime);
				$("#umnu" + apputils.mnutime.id).click(function () {
					resetview();
					console.log("OK");
				});
				addmenuitem(apputils.mnutrip);
				$("#umnu" + apputils.mnutrip.id).click(view.delivery);
				addmenuitem(apputils.mnutruck);
				addmenuitem(apputils.mnudriver);
				addmenuitem(apputils.mnuclient);
				addmenuitem(apputils.mnuproduct);
				addmenuitem(apputils.mnureport);
				break;
			case "encoder":
				addmenuitem(apputils.mnutime);
				addmenuitem(apputils.mnutrip);
				break;
		}


	}

	view.fillinfo = function (info)
	{
		$("#name-rightbadge").html(info.name);
		$("#name-downbadge").html(info.name);
		$("#name-leftbadge").html(info.name);
		$("#user-position").html(info.position);
	}

	view.setprofimg = function (ref)
	{
		$("#img-leftbadge").attr('src', ref);
		$("#img-rightbadge").attr('src', ref);
		$("#img-downbadge").attr('src', ref);
	}

	view.resetall = function ()
	{
		$("#name-rightbadge").html("");
		$("#name-downbadge").html("");
		$("#name-leftbadge").html("");
		$("#user-position").html("");
		$("#user-menus").html("");
		$("#main").html("");
		view.setprofimg("dist/img/avatar04.png");
		model.sysout();
		$("#main").append(view.loginbox());
		$("#umnu" + apputils.mnutrip.id).unbind("click");
		$("#umnu" + apputils.mnutime.id).unbind("click");
	}

	view.alertbox=function (atype, content)
	{
		return '<div class="alert alert-' + atype + ' alert-dismissable ">' +
			'<button type="button" class="close" data-dismiss="alert" '+
			'aria-hidden="true">×</button>'+
			'<i class="icon fa fa-ban"></i>' +
             content +
			'</div>';
	}



	view.loginbox = function ()
	{
		modhtml = '<div class="login-box">' +
       	       '<div class="login-logo">' +
                    apputils.appname +
              '</div><!-- /.login-logo -->' +
              '<div class="login-box-body">' +
                    '<p class="login-box-msg">Sign in to start your session</p>' +
                      '<div class="form-group has-feedback">' +
                        '<input id="username" type="email" class="form-control" placeholder="User Name">' +
                        '<span class="fa fa-user-secret form-control-feedback"></span>' +
                      '</div>' +
                      '<div class="form-group has-feedback">' +
                        '<input id="password" type="password" class="form-control" placeholder="Password">' +
                        '<span class="glyphicon glyphicon-lock form-control-feedback"></span>' +
                      '</div>' +
                      '<div class="row">' +
                        '<div class="col-xs-8">' +
                        '<div id="errlog"></div>' +
                        '</div><!-- /.col -->' +
                        '<div class="col-xs-4">' +
				          '<table><tr><td>' +
                          '<button id="btnlogin" class="btn btn-primary btn-large btn-block btn-flat" onclick="apputils.login()">Sign In</button>' +
                           '</td><td id="logineffects"></td></tr></table>' +
			              '</div><!-- /.col -->' +
                      '</div>' +
              '</div><!-- /.login-box-body -->' +
            '</div><!-- /.login-box -->';

	    return modhtml;
	}

	view.timelineclean = function () {
		//$("#umnu" + apputils.mnutime.id).unbind("click");
	}

	view.selectize = function (json, fcn, id, title, selectid)
	{

        compo = '<select class="form-control" id="'+selectid+'">'
		for (i=0; i < json.length; i++)
		{
			compo += '<option>' + fcn(json, i) + '</option>';
		}
        compo += '</select>';

		return compo;
	}

	view.spinner = function ()
	{
		return '<div class="overlay"><i class="fa fa-refresh fa-spin"></i></div>';
	}

	view.check = function ()
	{
		return '<div class="overlay"><i class="fa fa-refresh fa-check-circle"></i></div>';
	}
	
	function boxwithminimize(boxid, title, contents, footer)
	{
		       
        return   '<div class="box box-default" id="'+boxid+'">' +
            '<div class="box-header with-border">' +
              '<h3 class="box-title">'+title+'</h3>' +
              '<div class="box-tools pull-right">' +
                '<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>' +
              '</div>'+
           '</div><!-- /.box-header -->'+
            '<div class="box-body">'+
			      contents +
            '</div><!-- /.box-body -->'+
            '<div class="box-footer">' +
			   footer +
            '</div>' +
          '</div><!-- /.box -->';
	}
	
	function formgroup(elements)
	{
		return '<div class="form-group">' +
		       elements + 
			   '</div>';
	}
	
	
	function row(contents)
	{
		return '<div class="row">' +contents + '</div>';
	}
	
	function column(n,contents)
	{
		return '<div class="col-md-'+n+'">' +
		       contents +
			   '</div>'; 
	}
	
	function inputtext(label, inputtype, id, extension)
	{
		return '<label>'+label+'</label>' + 
		       '<input type="'+inputtype+'" class="form-control"'+
			   '  id="' + id +'" '+ extension + '>';
	}
	
	function inputgroup(group) {
		return '<div class="input-group">' + group + '</div>';
	}
	
	function button(bclass, label, id)
	{
		return '<button class="btn btn-'+bclass+'" id="'+id+'" >'+label+'</button>';
	}
	
	function container(content)
	{
		return '<div class="container">' + content + '</div>';
	}
	
	function span(wid, content)
	{
		return '<div class="span' + wid + '">' + content + '</div>';
	}
	
	function gendiv(classp, content)
	{
		return '<div class="'+ classp + '">' + content + '</div>';
	}
	
	function select(id,label, values)
	{
	   options = '';
	   for (i=0; i < values.length; i++)
	   {
	      options += '<option>' + values[i] + '</option>';
	   }
	   select = '<select id="'+id+'" class="form-control">' + options + '</select>';   
	   return '<label>'+label+'</label>' + select;
	}
	
	
	
	
	view.enrollform = function ()
	{
		lrn = formgroup(inputtext("LRN No",
		       "text", "lrn", 
			   'placeholder="LRN No. (Leave Space for None)"'));
			   
		lastname = formgroup(inputtext("Last Name",
		       "text", "stulastname", 
			   'placeholder="This is required"'));
	    
		firstname = formgroup(inputtext("First Name",
		       "text", "stufirstname", 
			   'placeholder="This is required"'));
			   
	    middlename = formgroup(inputtext("Middle Name",
		       "text", "stumiddlename", 
			   'placeholder="This is required"'));
	   
	    sex = formgroup(select('sex', 'Sex', ['Male', 'Female']));
	    
		birthdate = formgroup(inputtext("Birthdate",
		       "text", "stubdate", 
			   'placeholder="mm/dd/yyyy"'));
			   //'data-inputmask="'+"'alias': 'dd/mm/yyyy'" + '" data-mask')); 
		
		age = formgroup(inputtext("Age",
		       "text", "stuage", 
			   'placeholder="AGE as of 1st Friday June"'));	   		   		   	   
		
		mothertongue = formgroup(inputtext("Mother Tongue",
		       "text", "stumothertongue", 
			   'placeholder="Grade 1 to 3 Only"'));
		
		ip = formgroup(inputtext("IP",
		       "text", "stuip", 
			   'placeholder="Ethnic Group"'));
		
		religion = formgroup(inputtext("Religion",
		       "text", "stureligion", 
			   'placeholder="This is required."'));
		
		student = lrn + lastname + 
		        firstname + middlename + sex + 
				birthdate + age + mothertongue +
				ip + religion;

		houseno = formgroup(inputtext("House #",
		       "text", "stuhouseno", 
			   'placeholder="House #/Street/Sitio/Purok"'));

		brgy = formgroup(inputtext("Barangay",
		       "text", "stubrgy", 
			   'placeholder="Barangay"'));
		
		municipal = formgroup(inputtext("Municipality",
		       "text", "stumun", 
			   'placeholder="Municipality/City"'));
		
		province = formgroup(inputtext("Province",
		       "text", "stuprovince", 
			   'placeholder="Province"'));
		
		zipcode = formgroup(inputtext("Zip Code",
		       "text", "stuzip", 
			   'placeholder="Zip Code"'));
		
		address = houseno + brgy + municipal
		       + province + zipcode;
				
	   fatherlname = formgroup(inputtext("Father Last Name",
		       "text", "stuflname", 
			   'placeholder="Father Last Name"'));
	   
	   fatherfname = formgroup(inputtext("Father First Name",
		       "text", "stuffname", 
			   'placeholder="Father First Name"'));
	   
	   fathermi	= formgroup(inputtext("Father Middle Name",
		       "text", "stufmname", 
			   'placeholder="Father Middle Name"'));		
				
	   motherlname = formgroup(inputtext("Mother Last Name",
		       "text", "stumlname", 
			   'placeholder="Mother Last Name"'));
	   
	   motherfname = formgroup(inputtext("Mother First Name",
		       "text", "stumfname", 
			   'placeholder="Mother First Name"'));
	   
	   mothermi	= formgroup(inputtext("Mother Middle Name",
		       "text", "stummname", 
			   'placeholder="Mother Middle Name"'));		
				
	  guardlname = formgroup(inputtext("Guard Last Name",
		       "text", "stuglname", 
			   'placeholder="Guard Last Name"'));
	   
	   guardfname = formgroup(inputtext("Guard First Name",
		       "text", "stugfname", 
			   'placeholder="Guard First Name"'));
	   
	   guardmi	= formgroup(inputtext("Guard Middle Name",
		       "text", "stugmname", 
			   'placeholder="Guard Middle Name"'));		
				
		ties = fatherlname + fatherfname + fathermi +
			   motherlname + motherfname + mothermi +
			   guardlname + guardfname + guardmi;	
			   
		body = row(column(4, student) +
			   column(4, address) +
			   column(4, ties)) +
			   row( column(4, "") +
			      gendiv("col-md-4 text-center", button("primary fa fa-save", " Save", 'saveenroll')) +
				  column(4,""));
			   
		//$("#stubdate").datetimepicker({format:'m.d.YYYY', timepicker:false, startDate:'2000/01/01'});	     
		return boxwithminimize("enrollbox","Enroll Student", body, "");
	}
	
	view.enroll = function ()
	{
	   $("#main").html("");
	   $("#main").html(view.enrollform());
	   $("#stubdate").datetimepicker({format:'m/d/Y', timepicker:false, startDate:'2000/01/01'});
	   $("#saveenroll").click(model.enrollstu);
	}
	
	view.cleanenroll = function ()
	{
	   $("#stubdate").datetimepicker("destroy");
	   $("#saveenroll").unbind('click');
	   apputils.initboxfields("enrollbox");  
	}
	
}( window.view = window.view || {}, jQuery ));


function init()
{
  if (apputils.islogin())
  {
	  model.loaditems(true);
  }
  	else
  {
  	  view.resetall();
  }
}

init();



/*
$.ajax({
    url: 'http://127.0.0.1:5000/auth',
    type:"GET",
    dataType: "json",
    success: function(resp) {
              console.log(resp);
    },
    error: function (e) {
        alert("error pre");
   },
   beforeSend: function (xhrObj){

          xhrObj.setRequestHeader("Authorization",
                        "Basic " + btoa("super" + ":" + $.sha1('letmein')));
   }
});

$.ajax({
    url: 'http://127.0.0.1:5000/drivers',
    type:"GET",
    dataType: "json",
    crossDomain: true,
    contentType: 'application/json; charset=utf-8',
    success: function(data) {
              console.log(data);
    },
    error: function () {
        alert("error pre");
   },
   beforeSend: function (xhrObj){
         xhrObj.setRequestHeader("username", "super");
         xhrObj.setRequestHeader("password", $.sha1('letmein'));
   }
});


$("#deliverydate").datetimepicker("");
$("#deliverydate").datetimepicker("destroy");
$("#selplateno").find("option:selected").text();

 */